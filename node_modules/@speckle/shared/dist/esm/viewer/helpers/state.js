import { intersection, isObjectLike } from '#lodash';
import { UnformattableSerializedViewerStateError } from '../errors/index.js';
var MeasurementType;
(function (MeasurementType) {
    MeasurementType[MeasurementType["PERPENDICULAR"] = 0] = "PERPENDICULAR";
    MeasurementType[MeasurementType["POINTTOPOINT"] = 1] = "POINTTOPOINT";
})(MeasurementType || (MeasurementType = {}));
/**
 * v1 -> v1.1
 * - ui.filters.propertyFilter.isApplied field added
 * - ui.spotlightUserId swapped for spotlightUserSessionId
 * v1.1 -> v1.2
 * - ui.diff added
 */
export const SERIALIZED_VIEWER_STATE_VERSION = 1.2;
/**
 * Note: This only does superficial validation. To really ensure that all of the keys are there, even if prefilled with default values, make sure you invoke
 * formatSerializedViewerState() on the state afterwards
 */
export const isSerializedViewerState = (val) => {
    if (!val)
        return false;
    const keys = [
        'projectId',
        'sessionId',
        'resources',
        'ui',
        'viewer'
    ];
    if (!isObjectLike(val))
        return false;
    const valKeys = Object.keys(val);
    if (intersection(valKeys, keys).length !== keys.length)
        return false;
    return true;
};
const initializeMissingData = (state) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54;
    const throwInvalidError = (missingPath) => {
        throw new UnformattableSerializedViewerStateError('Required data missing from SerializedViewerState: ' + missingPath);
    };
    const defaultMeasurementOptions = {
        visible: false,
        type: MeasurementType.POINTTOPOINT,
        vertexSnap: false,
        units: 'm',
        precision: 2
    };
    const measurementOptions = {
        ...defaultMeasurementOptions,
        ...(_b = (_a = state.ui) === null || _a === void 0 ? void 0 : _a.measurement) === null || _b === void 0 ? void 0 : _b.options
    };
    return {
        projectId: state.projectId || throwInvalidError('projectId'),
        sessionId: state.sessionId || `nullSessionId-${Math.random() * 1000}`,
        viewer: {
            ...(state.viewer || {}),
            metadata: {
                ...(((_c = state.viewer) === null || _c === void 0 ? void 0 : _c.metadata) || {}),
                filteringState: ((_e = (_d = state.viewer) === null || _d === void 0 ? void 0 : _d.metadata) === null || _e === void 0 ? void 0 : _e.filteringState) || null
            }
        },
        resources: {
            ...(state.resources || {}),
            request: {
                ...(((_f = state.resources) === null || _f === void 0 ? void 0 : _f.request) || {}),
                resourceIdString: ((_h = (_g = state.resources) === null || _g === void 0 ? void 0 : _g.request) === null || _h === void 0 ? void 0 : _h.resourceIdString) ||
                    throwInvalidError('resources.request.resourceIdString'),
                threadFilters: {
                    ...(((_k = (_j = state.resources) === null || _j === void 0 ? void 0 : _j.request) === null || _k === void 0 ? void 0 : _k.threadFilters) || {}),
                    includeArchived: ((_o = (_m = (_l = state.resources) === null || _l === void 0 ? void 0 : _l.request) === null || _m === void 0 ? void 0 : _m.threadFilters) === null || _o === void 0 ? void 0 : _o.includeArchived) || false,
                    loadedVersionsOnly: ((_r = (_q = (_p = state.resources) === null || _p === void 0 ? void 0 : _p.request) === null || _q === void 0 ? void 0 : _q.threadFilters) === null || _r === void 0 ? void 0 : _r.loadedVersionsOnly) || false
                }
            }
        },
        ui: {
            ...(state.ui || {}),
            threads: {
                ...(((_s = state.ui) === null || _s === void 0 ? void 0 : _s.threads) || {}),
                openThread: {
                    ...(((_u = (_t = state.ui) === null || _t === void 0 ? void 0 : _t.threads) === null || _u === void 0 ? void 0 : _u.openThread) || {}),
                    threadId: ((_x = (_w = (_v = state.ui) === null || _v === void 0 ? void 0 : _v.threads) === null || _w === void 0 ? void 0 : _w.openThread) === null || _x === void 0 ? void 0 : _x.threadId) || null,
                    isTyping: ((_0 = (_z = (_y = state.ui) === null || _y === void 0 ? void 0 : _y.threads) === null || _z === void 0 ? void 0 : _z.openThread) === null || _0 === void 0 ? void 0 : _0.isTyping) || false,
                    newThreadEditor: ((_3 = (_2 = (_1 = state.ui) === null || _1 === void 0 ? void 0 : _1.threads) === null || _2 === void 0 ? void 0 : _2.openThread) === null || _3 === void 0 ? void 0 : _3.newThreadEditor) || false
                }
            },
            diff: {
                ...(((_4 = state.ui) === null || _4 === void 0 ? void 0 : _4.diff) || {}),
                command: ((_6 = (_5 = state.ui) === null || _5 === void 0 ? void 0 : _5.diff) === null || _6 === void 0 ? void 0 : _6.command) || null,
                time: ((_8 = (_7 = state.ui) === null || _7 === void 0 ? void 0 : _7.diff) === null || _8 === void 0 ? void 0 : _8.time) || 0.5,
                mode: ((_10 = (_9 = state.ui) === null || _9 === void 0 ? void 0 : _9.diff) === null || _10 === void 0 ? void 0 : _10.mode) || 1
            },
            spotlightUserSessionId: ((_11 = state.ui) === null || _11 === void 0 ? void 0 : _11.spotlightUserSessionId) || null,
            filters: {
                ...(((_12 = state.ui) === null || _12 === void 0 ? void 0 : _12.filters) || {}),
                isolatedObjectIds: ((_14 = (_13 = state.ui) === null || _13 === void 0 ? void 0 : _13.filters) === null || _14 === void 0 ? void 0 : _14.isolatedObjectIds) || [],
                hiddenObjectIds: ((_16 = (_15 = state.ui) === null || _15 === void 0 ? void 0 : _15.filters) === null || _16 === void 0 ? void 0 : _16.hiddenObjectIds) || [],
                selectedObjectIds: ((_18 = (_17 = state.ui) === null || _17 === void 0 ? void 0 : _17.filters) === null || _18 === void 0 ? void 0 : _18.selectedObjectIds) || [],
                propertyFilter: {
                    ...(((_20 = (_19 = state.ui) === null || _19 === void 0 ? void 0 : _19.filters) === null || _20 === void 0 ? void 0 : _20.propertyFilter) || {}),
                    key: ((_23 = (_22 = (_21 = state.ui) === null || _21 === void 0 ? void 0 : _21.filters) === null || _22 === void 0 ? void 0 : _22.propertyFilter) === null || _23 === void 0 ? void 0 : _23.key) || null,
                    isApplied: ((_26 = (_25 = (_24 = state.ui) === null || _24 === void 0 ? void 0 : _24.filters) === null || _25 === void 0 ? void 0 : _25.propertyFilter) === null || _26 === void 0 ? void 0 : _26.isApplied) || false
                }
            },
            camera: {
                ...(((_27 = state.ui) === null || _27 === void 0 ? void 0 : _27.camera) || {}),
                position: ((_29 = (_28 = state.ui) === null || _28 === void 0 ? void 0 : _28.camera) === null || _29 === void 0 ? void 0 : _29.position) || throwInvalidError('ui.camera.position'),
                target: ((_31 = (_30 = state.ui) === null || _30 === void 0 ? void 0 : _30.camera) === null || _31 === void 0 ? void 0 : _31.target) || throwInvalidError('ui.camera.target'),
                isOrthoProjection: ((_33 = (_32 = state.ui) === null || _32 === void 0 ? void 0 : _32.camera) === null || _33 === void 0 ? void 0 : _33.isOrthoProjection) || false,
                zoom: ((_35 = (_34 = state.ui) === null || _34 === void 0 ? void 0 : _34.camera) === null || _35 === void 0 ? void 0 : _35.zoom) || 1
            },
            sectionBox: ((_38 = (_37 = (_36 = state.ui) === null || _36 === void 0 ? void 0 : _36.sectionBox) === null || _37 === void 0 ? void 0 : _37.min) === null || _38 === void 0 ? void 0 : _38.length) && ((_40 = (_39 = state.ui) === null || _39 === void 0 ? void 0 : _39.sectionBox.max) === null || _40 === void 0 ? void 0 : _40.length)
                ? {
                    min: state.ui.sectionBox.min,
                    max: state.ui.sectionBox.max
                }
                : null,
            lightConfig: {
                ...(((_41 = state.ui) === null || _41 === void 0 ? void 0 : _41.lightConfig) || {}),
                intensity: (_43 = (_42 = state.ui) === null || _42 === void 0 ? void 0 : _42.lightConfig) === null || _43 === void 0 ? void 0 : _43.intensity,
                indirectLightIntensity: (_45 = (_44 = state.ui) === null || _44 === void 0 ? void 0 : _44.lightConfig) === null || _45 === void 0 ? void 0 : _45.indirectLightIntensity,
                elevation: (_47 = (_46 = state.ui) === null || _46 === void 0 ? void 0 : _46.lightConfig) === null || _47 === void 0 ? void 0 : _47.elevation,
                azimuth: (_49 = (_48 = state.ui) === null || _48 === void 0 ? void 0 : _48.lightConfig) === null || _49 === void 0 ? void 0 : _49.azimuth
            },
            explodeFactor: ((_50 = state.ui) === null || _50 === void 0 ? void 0 : _50.explodeFactor) || 0,
            selection: ((_51 = state.ui) === null || _51 === void 0 ? void 0 : _51.selection) || null,
            measurement: {
                enabled: (_54 = (_53 = (_52 = state.ui) === null || _52 === void 0 ? void 0 : _52.measurement) === null || _53 === void 0 ? void 0 : _53.enabled) !== null && _54 !== void 0 ? _54 : false,
                options: measurementOptions
            }
        }
    };
};
/**
 * Formats SerializedViewerState by bringing it up to date with the structure of the latest version
 * and ensuring missing keys are initialized with default values
 */
export const formatSerializedViewerState = (state) => {
    const finalState = initializeMissingData(state);
    return finalState;
};
//# sourceMappingURL=state.js.map