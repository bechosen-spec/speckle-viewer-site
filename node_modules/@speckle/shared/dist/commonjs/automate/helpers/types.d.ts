import type { PartialDeep } from 'type-fest';
import type { Nullable } from '../../core/index.js';
export declare const TRIGGER_DEFINITIONS_SCHEMA_VERSION = 1;
export declare const RESULTS_SCHEMA_VERSION = 1;
export declare const REDACTED_VALUE = "******";
export type VersionCreatedTriggerDefinition = {
    type: 'VERSION_CREATED';
    modelId: string;
};
export type TriggerDefinitionsSchema = {
    version: number;
    definitions: Array<VersionCreatedTriggerDefinition>;
};
export type ObjectResultLevel = 'INFO' | 'WARNING' | 'ERROR';
export type ResultsSchema = {
    version: number;
    values: {
        objectResults: Array<{
            category: string;
            level: ObjectResultLevel;
            objectIds: string[];
            message: Nullable<string>;
            metadata: Nullable<Record<string, unknown> & {
                gradient?: boolean;
                gradientValues?: Record<string, {
                    gradientValue: number;
                }>;
            }>;
            visualoverrides: Nullable<Record<string, unknown>>;
        }>;
        blobIds?: string[];
    };
};
type UnformattedTriggerDefinitionSchema = PartialDeep<TriggerDefinitionsSchema>;
type UnformattedResultsSchema = PartialDeep<ResultsSchema>;
export declare const isVersionCreatedTriggerDefinition: (val: unknown) => val is VersionCreatedTriggerDefinition;
export declare const isTriggerDefinitionSchema: (val: unknown) => val is TriggerDefinitionsSchema;
export declare const formatTriggerDefinitionSchema: (state: UnformattedTriggerDefinitionSchema) => TriggerDefinitionsSchema;
export declare const isResultsSchema: (val: unknown) => val is ResultsSchema;
export declare const formatResultsSchema: (state: UnformattedResultsSchema) => ResultsSchema;
export {};
//# sourceMappingURL=types.d.ts.map