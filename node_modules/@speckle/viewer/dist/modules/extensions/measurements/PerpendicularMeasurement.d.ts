import { Box3, Camera, Plane, Raycaster, Vector2, type Intersection } from 'three';
import { Measurement } from './Measurement.js';
export declare class PerpendicularMeasurement extends Measurement {
    private startGizmo;
    private endGizmo;
    private midPoint;
    private normalIndicatorPixelSize;
    set isVisible(value: boolean);
    get bounds(): Box3;
    constructor();
    frameUpdate(camera: Camera, size: Vector2, bounds: Box3): void;
    update(): void;
    raycast(raycaster: Raycaster, intersects: Array<Intersection>): void;
    highlight(value: boolean): void;
    updateClippingPlanes(planes: Plane[]): void;
}
