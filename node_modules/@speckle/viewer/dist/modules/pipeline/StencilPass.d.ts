import { Material, OrthographicCamera, PerspectiveCamera, Plane, Scene, Texture, WebGLRenderTarget, WebGLRenderer } from 'three';
import { BaseSpecklePass, type SpecklePass } from './SpecklePass.js';
export declare class StencilPass extends BaseSpecklePass implements SpecklePass {
    private camera;
    private scene;
    private overrideMaterial;
    private _oldClearColor;
    private clearColor;
    private clearAlpha;
    private clearDepth;
    private drawBufferSize;
    onBeforeRender: (() => void) | undefined;
    onAfterRender: (() => void) | undefined;
    constructor();
    get displayName(): string;
    get outputTexture(): Texture | null;
    get material(): Material;
    update(scene: Scene, camera: PerspectiveCamera | OrthographicCamera): void;
    setClippingPlanes(planes: Plane[]): void;
    render(renderer: WebGLRenderer, _writeBuffer: WebGLRenderTarget, readBuffer: WebGLRenderTarget): void;
}
