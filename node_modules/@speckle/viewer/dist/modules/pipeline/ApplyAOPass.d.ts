import { OrthographicCamera, PerspectiveCamera, Scene, ShaderMaterial, Texture, WebGLRenderer } from 'three';
import { Pass } from 'three/examples/jsm/postprocessing/Pass.js';
import { type InputColorTextureUniform, type InputColorInterpolateTextureUniform, type SpeckleProgressivePass, RenderType } from './SpecklePass.js';
export declare class ApplySAOPass extends Pass implements SpeckleProgressivePass {
    private fsQuad;
    materialCopy: ShaderMaterial;
    private frameIndex;
    private accumulatioFrames;
    constructor();
    setTexture(uName: InputColorTextureUniform | InputColorInterpolateTextureUniform, texture: Texture): void;
    get displayName(): string;
    get outputTexture(): Texture | null;
    setParams(params: boolean | undefined): void;
    setFrameIndex(index: number): void;
    setAccumulationFrames(frames: number): void;
    setRenderType(type: RenderType): void;
    update(scene: Scene, camera: PerspectiveCamera | OrthographicCamera): void;
    render(renderer: WebGLRenderer): void;
}
