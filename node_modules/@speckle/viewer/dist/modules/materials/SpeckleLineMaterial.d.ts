import { type IUniform, Material, Scene, Camera, BufferGeometry, Object3D } from 'three';
import { ExtendedLineMaterial, type Uniforms } from './SpeckleMaterial.js';
import { type LineMaterialParameters } from 'three/examples/jsm/lines/LineMaterial.js';
import type { SpeckleWebGLRenderer } from '../objects/SpeckleWebGLRenderer.js';
declare class SpeckleLineMaterial extends ExtendedLineMaterial {
    protected get vertexProgram(): string;
    protected get fragmentProgram(): string;
    protected get baseUniforms(): {
        [uniform: string]: IUniform;
    };
    protected get uniformsDef(): Uniforms;
    set pixelThreshold(value: number);
    constructor(parameters: LineMaterialParameters, defines?: string[]);
    /** We need a unique key per program */
    customProgramCacheKey(): string;
    copy(source: Material): this;
    fastCopy(from: Material, to: Material): void;
    onBeforeRender(_this: SpeckleWebGLRenderer, _scene: Scene, _camera: Camera, _geometry: BufferGeometry, object: Object3D): void;
}
export default SpeckleLineMaterial;
