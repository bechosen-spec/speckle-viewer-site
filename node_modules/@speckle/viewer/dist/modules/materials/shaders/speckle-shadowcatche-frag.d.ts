export declare const speckleShadowcatcherFrag = "\nvarying vec2 vUv;\n\nuniform sampler2D tex0;\nuniform sampler2D tex1;\nuniform sampler2D tex2;\nuniform sampler2D tex3;\nuniform vec4 weights;\nuniform float sigmoidRange;\nuniform float sigmoidStrength;\n\nvoid main() {\n\tfloat color0 = texture2D(tex0, vUv).r * weights.x;\n\tfloat color1 = texture2D(tex1, vUv).r * weights.y;\n\tfloat color2 = texture2D(tex2, vUv).r * weights.z;\n\tfloat color3 = texture2D(tex3, vUv).r * weights.w;\n\n\t// float c0 = mix(color0, 0., color1);\n\t// float c1 = mix(color1, 0., color0);\n\t// float c2 = mix(color3, 0., color0 * 0.5 + color1 * 0.5);\n\t// float sum = c0 + c1 + c2;\n\n\tfloat sum = color0 + color1 + color3 + color2;\n\n\tfloat a = sigmoidRange;//2.;\n\tfloat b = 0.03;\n\tfloat c = sigmoidStrength;//2.43;\n\tfloat d = 0.59;\n\tfloat e = 0.14;\n\tsum = clamp((sum*(a*sum+b))/(sum*(c*sum+d)+e), 0., 1.);\n\n\tvec2 sUv = vUv * 2. - 1.;\n\tsum *= 1. - pow(abs(sUv.x), 6.);\n\tsum *= 1. - pow(abs(sUv.y), 6.);\n\n\tgl_FragColor = vec4( vec3(sum), sum );\n}\n";
