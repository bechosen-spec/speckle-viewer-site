import { BufferGeometry, Camera, Material, Object3D, Scene, type IUniform, type MeshNormalMaterialParameters } from 'three';
import { ExtendedMeshNormalMaterial, type Uniforms } from './SpeckleMaterial.js';
import type { SpeckleWebGLRenderer } from '../objects/SpeckleWebGLRenderer.js';
declare class SpeckleNormalMaterial extends ExtendedMeshNormalMaterial {
    protected get vertexProgram(): string;
    protected get fragmentProgram(): string;
    protected get baseUniforms(): {
        [uniform: string]: IUniform;
    };
    protected get uniformsDef(): Uniforms;
    constructor(parameters: MeshNormalMaterialParameters, defines?: string[]);
    /** We need a unique key per program */
    customProgramCacheKey(): string;
    copy(source: Material): this;
    /** Called by three.js render loop */
    onBeforeRender(_this: SpeckleWebGLRenderer, _scene: Scene, _camera: Camera, _geometry: BufferGeometry, object: Object3D): void;
}
export default SpeckleNormalMaterial;
